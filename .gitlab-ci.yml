stages:
  - build
  - codestyle
  - tests
  - deploy

building:
  stage: build
  tags:
    - gitlab
  script:
    - find $CI_PROJECT_DIR -name "Makefile" -execdir make \;
  artifacts:
    paths:
      - $CI_PROJECT_DIR/src/C3_SimpleBashUtils-0/cat/s21_cat
      - $CI_PROJECT_DIR/src/C3_SimpleBashUtils-0/grep/s21_grep
    expire_in: 30 days

stylecheck:
  stage: codestyle
  tags:
    - gitlab
  script:
    - name_ch="*.[ch]"
    - output=$(clang-format -style="{$(grep ./materials/linters/.clang-format -e "BasedOnStyle")}" -n $(find $CI_PROJECT_DIR -name $name_ch) 2>&1) 
    - if [ -n "$output" ]; then echo "$output" && return 2; fi

testing:
  stage: tests
  dependencies:
    - building
  tags:
    - gitlab
  script:
    - name_sh="*_test.sh"
    - output=$(find $CI_PROJECT_DIR -name $name_sh -type f -print0 | while IFS= read -r -d $'\0' file; do bash "$file"; done 2>&1)
    - if [ -n "$output" ]; then echo "$output" && return 2; fi

deployment:
  stage: deploy
  when: manual
  dependencies:
    - building
  tags:
    - gitlab
  before_script:
    - mkdir -p ~/.ssh
    - touch ~/.ssh/id_rsa ~/.ssh/config ~/.ssh/known_hosts
    - chmod 600 ~/.ssh/id_rsa ~/.ssh/config ~/.ssh/known_hosts
    - echo "$OPENSSH_KEY" >> ~/.ssh/id_rsa
    - echo "Host *\n\tStrictHostKeyChecking no" >> ~/.ssh/config
    - ssh-keyscan 192.168.1.2 >> ~/.ssh/known_hosts
  script:
    # - find $CI_PROJECT_DIR -name "Makefile" -execdir make \;
    # - name_sh="script.sh"
    # - output=$(find $CI_PROJECT_DIR -name script.sh -type f -print0 | while IFS= read -r -d $'\0' file; do bash "$file"; done 2>&1)
    - bash $CI_PROJECT_DIR/src/script.sh
    # - if [ -n "$output" ]; then echo "$output" && exit 1; fi
